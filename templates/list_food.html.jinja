{% extends "base.html.jinja" %}
{% block extra_css %}
<link rel="stylesheet" href="{{ url_for('static', filename='css/lists.css') }}">
{% endblock %}
{% block content %}
<div class="list-container">
    <h1 class="list-title">–ü—Ä–æ–≤–∏–∑–∏—è –∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ</h1>
    
    <div class="search-section">
        <input type="text" id="foodSearch" class="search-input" placeholder="–ü–æ–∏—Å–∫ –ø—Ä–æ–≤–∏–∑–∏–∏..." autocomplete="off" oninput="showFoodSuggestions()">
        <div id="foodSuggestions" class="suggestions"></div>
    </div>
    
    {% if user %}
        <a href="{{ url_for('food.create_food') }}" class="create-new-btn">üçñ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–∏–∑–∏—é</a>
    {% endif %}
    
    {% if foods %}
        <div class="items-grid">
            {% for food in foods %}
                <div class="item-card">
                    <h3>{{ food.name }}</h3>
                    {% if food.image_url %}
                        <img src="{{ food.image_url }}" alt="–ö–∞—Ä—Ç–∏–Ω–∫–∞ –µ–¥—ã" style="max-width: 100%; border-radius: 10px; margin-bottom: 15px;">
                    {% endif %}
                    <p>{{ food.description | nl2br }}</p>
                    <div class="item-meta">
                        <span class="item-author">–ê–≤—Ç–æ—Ä: {{ food.author.username if food.author else '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω' }}</span>
                        <div class="item-actions">
                            <a href="{{ url_for('food.view_food', food_id=food.id) }}" class="view-btn">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    {% else %}
        <div class="empty-state">
            <div class="empty-state-icon">üç∫</div>
            <p>–ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ–≤–∏–∑–∏–∏ –Ω–µ—Ç. –°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –¥–æ–±–∞–≤–∏—Ç –µ–¥—É!</p>
        </div>
    {% endif %}
</div>
{% endblock %}
{% block scripts %}
<script>
const foods = [{% for food in foods %}"{{ food.name|escape }}",{% endfor %}];

function showFoodSuggestions() {
    const input = document.getElementById('foodSearch');
    const searchTerm = input.value.toLowerCase();
    const cards = document.querySelectorAll('.item-card');
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    cards.forEach(card => {
        const title = card.querySelector('h3').textContent.toLowerCase();
        const description = card.querySelector('p').textContent.toLowerCase();
        
        if (title.includes(searchTerm) || description.includes(searchTerm)) {
            card.style.display = 'block';
        } else {
            card.style.display = 'none';
        }
    });
    
    // –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    const container = document.getElementById('foodSuggestions');
    container.innerHTML = '';
    
    if (searchTerm.length > 0) {
        const suggestions = foods
            .filter(name => name.toLowerCase().includes(searchTerm))
            .slice(0, 5);
            
        if (suggestions.length > 0) {
            suggestions.forEach(name => {
                const div = document.createElement('div');
                div.className = 'suggestion-item';
                div.textContent = name;
                div.onclick = () => {
                    input.value = name;
                    container.innerHTML = '';
                    showFoodSuggestions();
                };
                container.appendChild(div);
            });
        }
    }
}
</script>
{% endblock %}
