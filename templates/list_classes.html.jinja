{% extends "base.html.jinja" %}
{% block title %}–í—Å–µ –∫–ª–∞—Å—Å—ã{% endblock %}
{% block extra_css %}
<link rel="stylesheet" href="{{ url_for('static', filename='css/lists.css') }}">
{% endblock %}
{% block content %}
<div class="list-container">
    <h1 class="list-title">–ö–ª–∞—Å—Å—ã –≥–µ—Ä–æ–µ–≤</h1>
    
    <div class="search-section">
        <input type="text" id="classSearch" class="search-input" placeholder="–ü–æ–∏—Å–∫ –∫–ª–∞—Å—Å–∞..." autocomplete="off" oninput="showClassSuggestions()">
        <div id="classSuggestions" class="suggestions"></div>
    </div>
    
    {% if user %}
        <a href="{{ url_for('classes.create_class') }}" class="create-new-btn">‚öî –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å</a>
    {% endif %}
    
    {% if classes %}
        <div class="items-grid">
            {% for c in classes %}
                <div class="item-card">
                    <h3>{{ c.name }}</h3>
                    <p>{{ c.description | nl2br }}</p>
                    <div class="item-meta">
                        <span class="item-author">–ê–≤—Ç–æ—Ä: {{ c.author.username if c.author else '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω' }}</span>
                        <div class="item-actions">
                            <a href="{{ url_for('classes.view_class', class_id=c.id) }}" class="view-btn">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
                        </div>
                    </div>
                </div>
            {% endfor %}
        </div>
    {% else %}
        <div class="empty-state">
            <div class="empty-state-icon">üõ°Ô∏è</div>
            <p>–ü–æ–∫–∞ —á—Ç–æ –∫–ª–∞—Å—Å—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã. –°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –¥–æ–±–∞–≤–∏—Ç –∫–ª–∞—Å—Å!</p>
        </div>
    {% endif %}
</div>
{% endblock %}
{% block scripts %}
<script>
const classes = [{% for c in classes %}"{{ c.name|escape }}",{% endfor %}];

function showClassSuggestions() {
    const input = document.getElementById('classSearch');
    const value = input.value.toLowerCase();
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    const cards = document.querySelectorAll('.item-card');
    cards.forEach(card => {
        const title = card.querySelector('h3').textContent.toLowerCase();
        const description = card.querySelector('p').textContent.toLowerCase();
        
        if (value === '' || title.includes(value) || description.includes(value)) {
            card.style.display = 'block';
        } else {
            card.style.display = 'none';
        }
    });
    
    // –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
    const suggestions = classes.filter(name => 
        name.toLowerCase().includes(value) && value.length > 0
    ).slice(0, 5);
    
    const container = document.getElementById('classSuggestions');
    container.innerHTML = '';
    
    if (suggestions.length > 0 && value.length > 0) {
        container.style.display = 'block';
        suggestions.forEach(suggestion => {
            const div = document.createElement('div');
            div.className = 'suggestion-item';
            div.textContent = suggestion;
            div.onclick = () => {
                input.value = suggestion;
                container.innerHTML = '';
                container.style.display = 'none';
                showClassSuggestions(); // –ü–µ—Ä–µ—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å
            };
            container.appendChild(div);
        });
    } else {
        container.style.display = 'none';
    }
}
</script>
{% endblock %}